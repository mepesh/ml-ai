#To make sure you don't miss anything, git status will always tell you about files that are in your repository but aren't (yet) being tracked.
git status

# Add all files at onces
# Add the new file to the staging area.
git add .

#Add one file in a directory while working with multiple files
git add data/linear.csv

#Commit Changes 
git commit -m "More changes"

#Ammend the commit messgae
git commit --amend - m "new message"

git diff 

#compare with recent commit
git diff -r HEAD 

#Shows the history of commits
git log

#File wise log
git log data/linera.csv

#for long cutom git message
git commit 

hash - Every commit to a repository has a unique identifier called a hash (since it is generated by running the changes through a pseudo-random number generator called a hash function)

#commit before the last commit 
git show HEAD~1

#shows the differnece in between the current state and two previous states
git diff HEAD~2

#Ignores any file inside the file which contacins any file name, extensuion or folder name.
.gitignore
> *.pyc
> backup

# Remove untracked files in your repo.
git clean -f 

#Git Configuration and Tweeking
git config --list
                --system: settings for every user on this computer.
                --global: settings for every one of your projects.
                --local: settings for one specific project.

#Username and email setting 
git config --global user.email rep.loop@datacamp.com
git config --global user.name Dipesh

#remove the recent changes from git stagging 
git reset HEAD 
#remove all stagged changes 
git reset

# discrad changes to all files 
git checkout .
#discard changes to a specific file which are not stagged
git checkout -- data/linear.csv


